{
  "openapi": "3.0.0",
  "paths": {
    "/books": {
      "post": {
        "operationId": "BooksController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "response list of saved books"
          }
        },
        "summary": "upload book(s) to server",
        "tags": [
          "book"
        ]
      },
      "get": {
        "operationId": "BooksController_listingBooks",
        "parameters": [
          {
            "name": "author",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "title",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisher_ids",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "category_ids",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "rating_from",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "rating_to",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "price_from",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "price_to",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response list of books filter by conditions"
          }
        },
        "summary": "filter books by conditions",
        "tags": [
          "book"
        ]
      }
    },
    "/books/{id}": {
      "get": {
        "operationId": "BooksController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response book with id"
          },
          "404": {
            "description": "book is not exist"
          }
        },
        "summary": "get a book by id",
        "tags": [
          "book"
        ]
      },
      "put": {
        "operationId": "BooksController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return true if book successful updated"
          },
          "404": {
            "description": "book with id (:id) is not exist!"
          }
        },
        "summary": "update a book by id",
        "tags": [
          "book"
        ]
      },
      "delete": {
        "operationId": "BooksController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "book"
        ]
      }
    },
    "/publishers": {
      "post": {
        "operationId": "PublishersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePublisherDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response id of created publisher"
          },
          "400": {
            "description": "Publisher is already exist"
          }
        },
        "summary": "Add a publisher",
        "tags": [
          "Publishers"
        ]
      },
      "get": {
        "operationId": "PublishersController_listingPublishers",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingPublisherResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get a list of publishers",
        "tags": [
          "Publishers"
        ]
      }
    },
    "/publishers/{id}": {
      "get": {
        "operationId": "PublishersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Publishers"
        ]
      },
      "delete": {
        "operationId": "PublishersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Publishers"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/users/{id}": {
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              },
              "examples": {
                "example1": {
                  "summary": "Valid login credentials",
                  "value": {
                    "email": "HoangAnhNguyen07102001@gmail.com",
                    "password": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return access_token, refresh_token and user basic infor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                },
                "example": {
                  "message": "User is not exist",
                  "error": "Unauthorized",
                  "statusCode": 401
                }
              }
            }
          }
        },
        "summary": "User login",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/sign-up/step-1": {
      "post": {
        "operationId": "AuthController_signUpFirstStep",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpFirstStepDto"
              },
              "examples": {
                "example1": {
                  "summary": "Valid sign up step 1 credentials",
                  "value": {
                    "email": "HoangAnhNguyen07102001@gmail.com",
                    "name": "Hoanh"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpFirstStepResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                },
                "example": {
                  "message": "Email or Username is already exist",
                  "error": "Bad Request",
                  "statusCode": 400
                }
              }
            }
          }
        },
        "summary": "User sign up step 1",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/sign-up/step-2": {
      "post": {
        "operationId": "AuthController_signUpSecondStep",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpSecondStepDto"
              },
              "examples": {
                "example1": {
                  "summary": "Valid sign up step 2 credentials",
                  "value": {
                    "id": "550e8400-e29b-41d4-a716-446655440000",
                    "password_set_token": "123456789abcdef",
                    "password": "SecureP@ssw0rd",
                    "avatar_url": "https://example.com/avatar.jpg",
                    "phone_number": "+84916313317",
                    "role": "USER"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return true if sign up success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                },
                "example": {
                  "message": "User is not exist",
                  "error": "Bad Request",
                  "statusCode": 400
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                },
                "example": {
                  "message": "Token is invalidated",
                  "error": "Bad Request",
                  "statusCode": 401
                }
              }
            }
          }
        },
        "summary": "User sign up step 2",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/validate-pw-set-token": {
      "get": {
        "operationId": "AuthController_validatePwSetToken",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/validate-token": {
      "get": {
        "operationId": "AuthController_validateToken",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/categories/bulk-create": {
      "post": {
        "operationId": "CategoriesController_bulkCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateCategoriesDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/categories": {
      "get": {
        "operationId": "CategoriesController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/orders": {
      "post": {
        "operationId": "OrdersController_createOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Order data including user info and order details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "orderId": 123
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or insufficient stock"
          }
        },
        "summary": "Create a new order",
        "tags": [
          "Orders"
        ]
      },
      "get": {
        "operationId": "OrdersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "operationId": "OrdersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        },
        "summary": "Get order details by ID",
        "tags": [
          "Orders"
        ]
      },
      "put": {
        "operationId": "OrdersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Order basic data such as status, address, ..etc..",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return true if order successful updated"
          },
          "404": {
            "description": "Order with id (:id) is not exist!"
          }
        },
        "summary": "Update order basic information",
        "tags": [
          "Orders"
        ]
      },
      "delete": {
        "operationId": "OrdersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Orders"
        ]
      }
    }
  },
  "info": {
    "title": "API",
    "description": "",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "BookFilterDto": {
        "type": "object",
        "properties": {
          "author": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          },
          "publisher_ids": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "rating_from": {
            "type": "number"
          },
          "rating_to": {
            "type": "number"
          },
          "price_from": {
            "type": "number"
          },
          "price_to": {
            "type": "number"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "page": {
            "type": "number"
          },
          "per_page": {
            "type": "number"
          }
        }
      },
      "BookListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "author": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "isbn": {
            "type": "string"
          },
          "publisherId": {
            "type": "object"
          },
          "categoryId": {
            "type": "object"
          },
          "price": {
            "type": "number"
          },
          "cover_image_url": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "number_of_reviews": {
            "type": "number"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "author",
          "title",
          "isbn",
          "publisherId",
          "categoryId",
          "price",
          "rating",
          "number_of_reviews"
        ]
      },
      "BookFilterResponseDto": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookListItem"
            }
          }
        }
      },
      "Dimensions": {
        "type": "object",
        "properties": {
          "height": {
            "type": "string",
            "example": "20cm"
          },
          "width": {
            "type": "string",
            "example": "15cm"
          },
          "thickness": {
            "type": "string",
            "example": "2cm"
          }
        },
        "required": [
          "height",
          "width",
          "thickness"
        ]
      },
      "BookItem": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Great Gatsby"
          },
          "author": {
            "type": "string",
            "example": "F. Scott Fitzgerald"
          },
          "isbn": {
            "type": "string",
            "example": "978-0743273565"
          },
          "publisherId": {
            "type": "number",
            "example": 2
          },
          "publication_date": {
            "type": "string",
            "example": "1925-04-10"
          },
          "price": {
            "type": "number",
            "example": 19.99
          },
          "stock_quantity": {
            "type": "number",
            "example": 50
          },
          "categoryId": {
            "type": "number",
            "example": 1
          },
          "language": {
            "type": "string",
            "example": "English",
            "enum": [
              "English",
              "Spanish",
              "French",
              "German",
              "Chinese",
              "Japanese",
              "Korean",
              "Italian",
              "Russian",
              "Hindi",
              "Arabic"
            ]
          },
          "page_count": {
            "type": "number",
            "example": 180
          },
          "description": {
            "type": "string",
            "example": "A classic novel..."
          },
          "format": {
            "type": "string",
            "example": "Hardcover"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "weight": {
            "type": "string",
            "example": "500g"
          },
          "cover_image_url": {
            "type": "string",
            "example": "https://example.com/book-cover.jpg"
          },
          "rating": {
            "type": "number",
            "example": 4.5
          },
          "number_of_reviews": {
            "type": "number",
            "example": 200
          },
          "tags": {
            "example": [
              "fiction",
              "classic"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "edition": {
            "type": "string",
            "example": "First Edition"
          },
          "series": {
            "type": "string",
            "example": "The Great Gatsby Series"
          }
        },
        "required": [
          "title",
          "author",
          "isbn",
          "publication_date",
          "price",
          "stock_quantity",
          "language",
          "page_count",
          "rating",
          "number_of_reviews"
        ]
      },
      "CreateBookDto": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookItem"
            }
          }
        },
        "required": [
          "list"
        ]
      },
      "PublisherDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "GetBookResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "author": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "isbn": {
            "type": "string"
          },
          "publisher": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PublisherDto"
              }
            ]
          },
          "category": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoryDto"
              }
            ]
          },
          "language": {
            "type": "string"
          },
          "page_count": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "cover_image_url": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "stock_quantity": {
            "type": "number"
          },
          "number_of_reviews": {
            "type": "number"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "weight": {
            "type": "string"
          },
          "edition": {
            "type": "string"
          },
          "series": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "author",
          "title",
          "isbn",
          "publisher",
          "category",
          "language",
          "page_count",
          "description",
          "price",
          "rating",
          "stock_quantity",
          "number_of_reviews",
          "weight",
          "edition",
          "series"
        ]
      },
      "UpdateDimensions": {
        "type": "object",
        "properties": {
          "height": {
            "type": "string",
            "example": "20cm"
          },
          "width": {
            "type": "string",
            "example": "15cm"
          },
          "thickness": {
            "type": "string",
            "example": "2cm"
          }
        }
      },
      "UpdateBookDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Great Gatsby"
          },
          "author": {
            "type": "string",
            "example": "F. Scott Fitzgerald"
          },
          "isbn": {
            "type": "string",
            "example": "978-0743273565"
          },
          "publisherId": {
            "type": "number",
            "example": 2,
            "description": "ID của nhà xuất bản"
          },
          "publication_date": {
            "type": "string",
            "example": "1925-04-10"
          },
          "price": {
            "type": "number",
            "example": 19.99
          },
          "stock_quantity": {
            "type": "number",
            "example": 50
          },
          "categoryId": {
            "type": "number",
            "example": 1,
            "description": "ID của danh mục sách"
          },
          "language": {
            "type": "string",
            "example": "English",
            "enum": [
              "English",
              "Spanish",
              "French",
              "German",
              "Chinese",
              "Japanese",
              "Korean",
              "Italian",
              "Russian",
              "Hindi",
              "Arabic"
            ]
          },
          "status": {
            "type": "string",
            "example": "AVAILABLE",
            "enum": [
              "AVAILABLE",
              "OUT_OF_STOCK",
              "PRE_ORDER",
              "SOLD_OUT",
              "COMING_SOON",
              "DISCONTINUED"
            ]
          },
          "page_count": {
            "type": "number",
            "example": 180
          },
          "description": {
            "type": "string",
            "example": "A classic novel..."
          },
          "format": {
            "type": "string",
            "example": "Hardcover"
          },
          "dimensions": {
            "$ref": "#/components/schemas/UpdateDimensions"
          },
          "weight": {
            "type": "string",
            "example": "500g"
          },
          "cover_image_url": {
            "type": "string",
            "example": "https://example.com/book-cover.jpg"
          },
          "rating": {
            "type": "number",
            "example": 4.5
          },
          "number_of_reviews": {
            "type": "number",
            "example": 200
          },
          "tags": {
            "example": [
              "fiction",
              "classic"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "edition": {
            "type": "string",
            "example": "First Edition"
          },
          "series": {
            "type": "string",
            "example": "The Great Gatsby Series"
          }
        }
      },
      "CreatePublisherDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Penguin Random House",
            "description": "Tên nhà xuất bản"
          },
          "website": {
            "type": "string",
            "example": "https://www.penguinrandomhouse.com",
            "description": "Website của nhà xuất bản"
          },
          "contact_email": {
            "type": "string",
            "example": "contact@publisher.com",
            "description": "Email liên hệ"
          },
          "phone_number": {
            "type": "string",
            "example": "+1234567890",
            "description": "Số điện thoại liên hệ"
          },
          "address": {
            "type": "string",
            "example": "123 Main Street, New York, USA",
            "description": "Địa chỉ nhà xuất bản"
          },
          "country": {
            "type": "string",
            "example": "USA",
            "description": "Quốc gia"
          }
        },
        "required": [
          "name"
        ]
      },
      "PublisherItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Penguin Random House"
          },
          "website": {
            "type": "string",
            "example": "https://www.penguinrandomhouse.com",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "example": "contact@publisher.com",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "example": "+84916313317",
            "nullable": true
          },
          "address": {
            "type": "string",
            "example": "123 Main Street, New York, USA",
            "nullable": true
          },
          "country": {
            "type": "string",
            "example": "USA",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "website",
          "contact_email",
          "phone_number",
          "address",
          "country"
        ]
      },
      "ListingPublisherResponseDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "per_page": {
            "type": "number",
            "example": 10
          },
          "total": {
            "type": "number",
            "example": 50
          },
          "total_pages": {
            "type": "number",
            "example": 5
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublisherItemDto"
            }
          }
        },
        "required": [
          "page",
          "per_page",
          "total",
          "total_pages",
          "data"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password_set_token": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "password_set_token"
        ]
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "SELLER",
          "USER",
          "ADMIN"
        ]
      },
      "UpdateNewUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "password_set_token": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ]
          }
        },
        "required": [
          "id",
          "password_set_token",
          "password",
          "avatar_url",
          "phone_number",
          "role"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {}
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserBasicInfor": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "name",
          "role"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserBasicInfor"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "user"
        ]
      },
      "SignUpFirstStepDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "name"
        ]
      },
      "SignUpSecondStepDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "password_set_token": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ]
          }
        },
        "required": [
          "id",
          "password_set_token",
          "password",
          "avatar_url",
          "phone_number",
          "role"
        ]
      },
      "VerifyTokenResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserBasicInfor"
          }
        },
        "required": [
          "user"
        ]
      },
      "UnauthorizedException": {
        "type": "object",
        "properties": {}
      },
      "SignUpFirstStepResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "password_set_token": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "password_set_token"
        ]
      },
      "BadRequestException": {
        "type": "object",
        "properties": {}
      },
      "CategoryItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Category Id"
          },
          "name": {
            "type": "string",
            "example": "historical",
            "description": "Category name"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ListingCategoriesResponseDto": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryItem"
            }
          }
        },
        "required": [
          "list"
        ]
      },
      "BulkCreateCategoriesDto": {
        "type": "object",
        "properties": {}
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "PAID",
          "SHIPPED",
          "DELIVERED",
          "CANCELLED"
        ]
      },
      "PaymentMethod": {
        "type": "string",
        "enum": [
          "CREDIT_CARD",
          "PAYPAL",
          "CASH_ON_DELIVERY",
          "BANK_TRANSFER"
        ]
      },
      "OrderDetail": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "number",
            "example": 2
          },
          "quantity": {
            "type": "number",
            "example": 2
          },
          "sub_total": {
            "type": "number",
            "example": 2.5
          }
        },
        "required": [
          "bookId",
          "quantity",
          "sub_total"
        ]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              }
            ]
          },
          "payment_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            ]
          },
          "note": {
            "type": "string",
            "example": "Ship me after woking hour"
          },
          "shipping_address": {
            "type": "string",
            "example": "123 ABC street"
          },
          "phone_number": {
            "type": "string",
            "example": "+123345454553"
          },
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDetail"
            }
          }
        },
        "required": [
          "userId",
          "status",
          "payment_method",
          "shipping_address",
          "phone_number",
          "detail"
        ]
      },
      "OrderDetailResponseDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "number",
            "example": 1
          },
          "bookId": {
            "type": "number",
            "example": 2
          },
          "book_title": {
            "type": "string",
            "example": "Clean Code"
          },
          "book_price": {
            "type": "number",
            "example": 25
          },
          "quantity": {
            "type": "number",
            "example": 2
          },
          "sub_total": {
            "type": "number",
            "example": 50
          }
        },
        "required": [
          "orderId",
          "bookId",
          "book_title",
          "book_price",
          "quantity",
          "sub_total"
        ]
      },
      "GetOrderResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "userId": {
            "type": "string",
            "example": "c5f46a9b-d86b-4e5b-9473-fb7c1f3a2d18"
          },
          "total_price": {
            "type": "number",
            "example": 100
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              }
            ]
          },
          "payment_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            ]
          },
          "shipping_address": {
            "type": "string",
            "example": "123 ABC street"
          },
          "phone_number": {
            "type": "string",
            "example": "+123345454553"
          },
          "note": {
            "type": "string",
            "example": "Please deliver after 5 PM"
          },
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDetailResponseDto"
            }
          }
        },
        "required": [
          "id",
          "userId",
          "total_price",
          "status",
          "payment_method",
          "shipping_address",
          "phone_number",
          "note",
          "detail"
        ]
      },
      "UpdateOrderDto": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              }
            ]
          },
          "payment_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            ]
          },
          "note": {
            "type": "string",
            "example": "Ship me after woking hour"
          },
          "shipping_address": {
            "type": "string",
            "example": "123 ABC street"
          },
          "phone_number": {
            "type": "string",
            "example": "+123345454553"
          }
        },
        "required": [
          "status",
          "payment_method",
          "shipping_address",
          "phone_number"
        ]
      }
    }
  }
}